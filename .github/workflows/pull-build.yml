name: Pull-request 

on:
  pull_request:
    types: [opened, synchronize]
    branches: ["master"]

jobs:
  angular:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install dependencies
        working-directory: ./angular
        run: |
          yarn install
      - name: Compile application
        working-directory: ./angular
        run: |
          yarn build
      - name: Execute linter
        working-directory: ./angular
        run: |
          yarn lint
      - name: Execute tests
        working-directory: ./angular
        run: |
          yarn test --watch=false --code-coverage
      - name: SonarCloud Scan Front
        uses: SonarSource/sonarcloud-github-action@master
        with:
          projectBaseDir: angular/.
          args: -Dsonar.projectKey=spiquera_jump-the-queue
            -Dsonar.organization=spiquera
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  java:
    needs: angular
    runs-on: ubuntu-latest
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up JDK
        working-directory: ./java
        uses: actions/setup-java@v1
        with:
          java-version: "11"
      - name: Build project with Maven
        run: |
          cd java/jtqj
          mvn install
      - name: SonarCloud Scan Back
        uses: SonarSource/sonarcloud-github-action@master
        with:
          projectBaseDir: java/.
          args: -Dsonar.projectKey=spiquera_jump-the-queue
            -Dsonar.organization=spiquera
            -Dsonar.sources=.
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}


  # build:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2
  #     - name: build
  #       run: |
  #         cd angular
  #         yarn install
  #         yarn build

  #     - name: Checkout code
  #       uses: actions/checkout@v2
  #       with:
  #         submodules: recursive
  #     - name: Set up JDK
  #       uses: actions/setup-java@v1
  #       with:
  #         java-version: "11"
  #     - name: Build project with Maven
  #       run: |
  #         cd java/jtqj
  #         mvn install

  # #usar lint custom (yarn lint)
  # lint:
  #   needs: build
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2
  #     - name: Run lint
  #       run: yarn lint

  # test:
  #   needs: build
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2
  #     - name: Run test
  #       run: |
  #         yarn test

  # Sonarcloud:
  #   needs: build
  #   steps:
  #     - name: Analyze with SonarCloud
  #       uses: SonarSource/sonarcloud-github-action@de2e56b42aa84d0b1c5b622644ac17e505c9a049
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} # Generate a token on Sonarcloud.io, add it to the secrets of this repo with the name SONAR_TOKEN (Settings > Secrets > Actions > add new repository secret)
  #       with:
  #         # Additional arguments for the sonarcloud scanner
  #         args:
  #           # Unique keys of your project and organization. You can find them in SonarCloud > Information (bottom-left menu)
  #           # mandatory
  #           -Dsonar.projectKey=spiquera_jump-the-queue
  #           -Dsonar.organization=spiquera
  #           # Comma-separated paths to directories containing main source files.
  #           #-Dsonar.sources= # optional, default is project base directory
  #           # When you need the analysis to take place in a directory other than the one from which it was launched
  #           #-Dsonar.projectBaseDir= # optional, default is .
  #           # Comma-separated paths to directories containing test source files.
  #           -Dsonar.tests= # optional. For more info about Code Coverage, please refer to https://docs.sonarcloud.io/enriching/test-coverage/overview/
  #           # Adds more detail to both client and server-side analysis logs, activating DEBUG mode for the scanner, and adding client-side environment variables and system properties to the server-side log of analysis report processing.
  #           #-Dsonar.verbose= # optional, default is false
