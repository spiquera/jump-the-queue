# Pipeline para build-lint-test-SonarCloud cuando haya una PR a master (test opening a PR from develop to master)
#

name: Pull-request

on:
  pull_request:
    types: [opened, synchronize]
    branches: ["master"]
    paths:
      - "angular/**"
      - "java/**"

jobs:
filter:
    name: Detect Changes on frontend/backend
    runs-on: ubuntu-latest
    outputs:
      frontend: ${{ steps.filter.outputs.frontend }}
      backend: ${{ steps.filter.outputs.backend }}
    steps:
      - uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: '{ frontend: [ "angular/**" ], backend: [ "java/**" ] }'
  angular:
    runs-on: ubuntu-latest
    if: ${{ needs.filter.outputs.frontend == 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install dependencies
        working-directory: ./angular
        run: |
          yarn install
      - name: Compile application
        working-directory: ./angular
        run: |
          yarn build
      - name: Execute linter
        working-directory: ./angular
        run: |
          yarn lint
      - name: Execute tests
        working-directory: ./angular
        run: |
          yarn test --watch=false --code-coverage
      - name: SonarCloud Scan Front
        uses: SonarSource/sonarcloud-github-action@master
        with:
          projectBaseDir: angular/.
          args: -Dsonar.projectKey=spiquera_jump-the-queue
            -Dsonar.organization=spiquera
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  java:
    runs-on: ubuntu-latest
    if: ${{ needs.filter.outputs.backend == 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: "11"
      - name: Build project with Maven
        working-directory: ./java/jtqj
        run: |
          mvn install
      - name: Test back
        working-directory: ./java/jtqj
        run: |
          mvn test
      - name: SonarCloud Scan Back
        continue-on-error: true
        uses: SonarSource/sonarcloud-github-action@master
        with:
          projectBaseDir: java/.
          args: -Dsonar.projectKey=spiquera_jump-the-queue
            -Dsonar.organization=spiquera
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
